{"ast":null,"code":"import getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\nimport getClippingRect from \"../dom-utils/getClippingRect.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport computeOffsets from \"./computeOffsets.js\";\nimport rectToClientRect from \"./rectToClientRect.js\";\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\nimport { isElement } from \"../dom-utils/instanceOf.js\";\nimport mergePaddingObject from \"./mergePaddingObject.js\";\nimport expandToHashMap from \"./expandToHashMap.js\";\nexport default function detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  var _options = options,\n    _options$placement = _options.placement,\n    placement = _options$placement === void 0 ? state.placement : _options$placement,\n    _options$boundary = _options.boundary,\n    boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n    _options$rootBoundary = _options.rootBoundary,\n    rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n    _options$elementConte = _options.elementContext,\n    elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n    _options$altBoundary = _options.altBoundary,\n    altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n    _options$padding = _options.padding,\n    padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var referenceElement = state.elements.reference;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : getDocumentElement(state.elements.popper), boundary, rootBoundary);\n  var referenceClientRect = getBoundingClientRect(referenceElement);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, {}, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n  return overflowOffsets;\n}","map":{"version":3,"names":["getBoundingClientRect","getClippingRect","getDocumentElement","computeOffsets","rectToClientRect","clippingParents","reference","popper","bottom","top","right","basePlacements","viewport","isElement","mergePaddingObject","expandToHashMap","detectOverflow","state","options","_options","_options$placement","placement","_options$boundary","boundary","_options$rootBoundary","rootBoundary","_options$elementConte","elementContext","_options$altBoundary","altBoundary","_options$padding","padding","paddingObject","altContext","referenceElement","elements","popperRect","rects","element","clippingClientRect","referenceClientRect","popperOffsets","strategy","popperClientRect","Object","assign","elementClientRect","overflowOffsets","left","offsetData","modifiersData","offset","keys","forEach","key","multiply","indexOf","axis"],"sources":["C:/Users/LENOVO/masterPortfolio/node_modules/@popperjs/core/lib/utils/detectOverflow.js"],"sourcesContent":["import getBoundingClientRect from \"../dom-utils/getBoundingClientRect.js\";\nimport getClippingRect from \"../dom-utils/getClippingRect.js\";\nimport getDocumentElement from \"../dom-utils/getDocumentElement.js\";\nimport computeOffsets from \"./computeOffsets.js\";\nimport rectToClientRect from \"./rectToClientRect.js\";\nimport { clippingParents, reference, popper, bottom, top, right, basePlacements, viewport } from \"../enums.js\";\nimport { isElement } from \"../dom-utils/instanceOf.js\";\nimport mergePaddingObject from \"./mergePaddingObject.js\";\nimport expandToHashMap from \"./expandToHashMap.js\";\nexport default function detectOverflow(state, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$placement = _options.placement,\n      placement = _options$placement === void 0 ? state.placement : _options$placement,\n      _options$boundary = _options.boundary,\n      boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,\n      _options$rootBoundary = _options.rootBoundary,\n      rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,\n      _options$elementConte = _options.elementContext,\n      elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,\n      _options$altBoundary = _options.altBoundary,\n      altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,\n      _options$padding = _options.padding,\n      padding = _options$padding === void 0 ? 0 : _options$padding;\n  var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));\n  var altContext = elementContext === popper ? reference : popper;\n  var referenceElement = state.elements.reference;\n  var popperRect = state.rects.popper;\n  var element = state.elements[altBoundary ? altContext : elementContext];\n  var clippingClientRect = getClippingRect(isElement(element) ? element : getDocumentElement(state.elements.popper), boundary, rootBoundary);\n  var referenceClientRect = getBoundingClientRect(referenceElement);\n  var popperOffsets = computeOffsets({\n    reference: referenceClientRect,\n    element: popperRect,\n    strategy: 'absolute',\n    placement: placement\n  });\n  var popperClientRect = rectToClientRect(Object.assign({}, popperRect, {}, popperOffsets));\n  var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect\n  // 0 or negative = within the clipping rect\n\n  var overflowOffsets = {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n  var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element\n\n  if (elementContext === popper && offsetData) {\n    var offset = offsetData[placement];\n    Object.keys(overflowOffsets).forEach(function (key) {\n      var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;\n      var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';\n      overflowOffsets[key] += offset[axis] * multiply;\n    });\n  }\n\n  return overflowOffsets;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}