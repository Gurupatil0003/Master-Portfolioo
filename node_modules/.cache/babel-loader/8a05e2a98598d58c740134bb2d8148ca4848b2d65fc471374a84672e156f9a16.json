{"ast":null,"code":"import hyphenateProperty from 'css-in-js-utils/lib/hyphenateProperty';\nimport isPrefixedValue from 'css-in-js-utils/lib/isPrefixedValue';\nimport capitalizeString from '../utils/capitalizeString';\nvar properties = {\n  transition: true,\n  transitionProperty: true,\n  WebkitTransition: true,\n  WebkitTransitionProperty: true,\n  MozTransition: true,\n  MozTransitionProperty: true\n};\nvar prefixMapping = {\n  Webkit: '-webkit-',\n  Moz: '-moz-',\n  ms: '-ms-'\n};\nfunction prefixValue(value, propertyPrefixMap) {\n  if (isPrefixedValue(value)) {\n    return value;\n  }\n\n  // only split multi values, not cubic beziers\n  var multipleValues = value.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g);\n  for (var i = 0, len = multipleValues.length; i < len; ++i) {\n    var singleValue = multipleValues[i];\n    var values = [singleValue];\n    for (var property in propertyPrefixMap) {\n      var dashCaseProperty = hyphenateProperty(property);\n      if (singleValue.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== 'order') {\n        var prefixes = propertyPrefixMap[property];\n        for (var j = 0, pLen = prefixes.length; j < pLen; ++j) {\n          // join all prefixes and create a new value\n          values.unshift(singleValue.replace(dashCaseProperty, prefixMapping[prefixes[j]] + dashCaseProperty));\n        }\n      }\n    }\n    multipleValues[i] = values.join(',');\n  }\n  return multipleValues.join(',');\n}\nexport default function transition(property, value, style, propertyPrefixMap) {\n  // also check for already prefixed transitions\n  if (typeof value === 'string' && properties.hasOwnProperty(property)) {\n    var outputValue = prefixValue(value, propertyPrefixMap);\n    // if the property is already prefixed\n    var webkitOutput = outputValue.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g).filter(function (val) {\n      return !/-moz-|-ms-/.test(val);\n    }).join(',');\n    if (property.indexOf('Webkit') > -1) {\n      return webkitOutput;\n    }\n    var mozOutput = outputValue.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g).filter(function (val) {\n      return !/-webkit-|-ms-/.test(val);\n    }).join(',');\n    if (property.indexOf('Moz') > -1) {\n      return mozOutput;\n    }\n    style['Webkit' + capitalizeString(property)] = webkitOutput;\n    style['Moz' + capitalizeString(property)] = mozOutput;\n    return outputValue;\n  }\n}","map":{"version":3,"names":["hyphenateProperty","isPrefixedValue","capitalizeString","properties","transition","transitionProperty","WebkitTransition","WebkitTransitionProperty","MozTransition","MozTransitionProperty","prefixMapping","Webkit","Moz","ms","prefixValue","value","propertyPrefixMap","multipleValues","split","i","len","length","singleValue","values","property","dashCaseProperty","indexOf","prefixes","j","pLen","unshift","replace","join","style","hasOwnProperty","outputValue","webkitOutput","filter","val","test","mozOutput"],"sources":["C:/Users/LENOVO/masterPortfolio/node_modules/inline-style-prefixer/es/plugins/transition.js"],"sourcesContent":["import hyphenateProperty from 'css-in-js-utils/lib/hyphenateProperty';\nimport isPrefixedValue from 'css-in-js-utils/lib/isPrefixedValue';\n\nimport capitalizeString from '../utils/capitalizeString';\n\nvar properties = {\n  transition: true,\n  transitionProperty: true,\n  WebkitTransition: true,\n  WebkitTransitionProperty: true,\n  MozTransition: true,\n  MozTransitionProperty: true\n};\n\nvar prefixMapping = {\n  Webkit: '-webkit-',\n  Moz: '-moz-',\n  ms: '-ms-'\n};\n\nfunction prefixValue(value, propertyPrefixMap) {\n  if (isPrefixedValue(value)) {\n    return value;\n  }\n\n  // only split multi values, not cubic beziers\n  var multipleValues = value.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g);\n\n  for (var i = 0, len = multipleValues.length; i < len; ++i) {\n    var singleValue = multipleValues[i];\n    var values = [singleValue];\n    for (var property in propertyPrefixMap) {\n      var dashCaseProperty = hyphenateProperty(property);\n\n      if (singleValue.indexOf(dashCaseProperty) > -1 && dashCaseProperty !== 'order') {\n        var prefixes = propertyPrefixMap[property];\n        for (var j = 0, pLen = prefixes.length; j < pLen; ++j) {\n          // join all prefixes and create a new value\n          values.unshift(singleValue.replace(dashCaseProperty, prefixMapping[prefixes[j]] + dashCaseProperty));\n        }\n      }\n    }\n\n    multipleValues[i] = values.join(',');\n  }\n\n  return multipleValues.join(',');\n}\n\nexport default function transition(property, value, style, propertyPrefixMap) {\n  // also check for already prefixed transitions\n  if (typeof value === 'string' && properties.hasOwnProperty(property)) {\n    var outputValue = prefixValue(value, propertyPrefixMap);\n    // if the property is already prefixed\n    var webkitOutput = outputValue.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g).filter(function (val) {\n      return !/-moz-|-ms-/.test(val);\n    }).join(',');\n\n    if (property.indexOf('Webkit') > -1) {\n      return webkitOutput;\n    }\n\n    var mozOutput = outputValue.split(/,(?![^()]*(?:\\([^()]*\\))?\\))/g).filter(function (val) {\n      return !/-webkit-|-ms-/.test(val);\n    }).join(',');\n\n    if (property.indexOf('Moz') > -1) {\n      return mozOutput;\n    }\n\n    style['Webkit' + capitalizeString(property)] = webkitOutput;\n    style['Moz' + capitalizeString(property)] = mozOutput;\n    return outputValue;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}