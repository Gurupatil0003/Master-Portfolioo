{"ast":null,"code":"import PropTypes from 'prop-types';\nimport { useContext } from 'react';\nimport DropdownContext from './DropdownContext';\n/**\n * Wires up Dropdown toggle functinality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n */\n\nexport function useDropdownToggle() {\n  var _useContext = useContext(DropdownContext),\n    show = _useContext.show,\n    toggle = _useContext.toggle,\n    setToggle = _useContext.setToggle;\n  return [{\n    ref: setToggle,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\nfunction DropdownToggle(_ref) {\n  var children = _ref.children;\n  var _useDropdownToggle = useDropdownToggle(),\n    props = _useDropdownToggle[0],\n    _useDropdownToggle$ = _useDropdownToggle[1],\n    show = _useDropdownToggle$.show,\n    toggle = _useDropdownToggle$.toggle;\n  return children({\n    show: show,\n    toggle: toggle,\n    props: props\n  });\n}\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","map":{"version":3,"names":["PropTypes","useContext","DropdownContext","useDropdownToggle","_useContext","show","toggle","setToggle","ref","propTypes","children","func","isRequired","DropdownToggle","_ref","_useDropdownToggle","props","_useDropdownToggle$","displayName"],"sources":["C:/Users/LENOVO/masterPortfolio/node_modules/react-overlays/esm/DropdownToggle.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { useContext } from 'react';\nimport DropdownContext from './DropdownContext';\n/**\n * Wires up Dropdown toggle functinality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n */\n\nexport function useDropdownToggle() {\n  var _useContext = useContext(DropdownContext),\n      show = _useContext.show,\n      toggle = _useContext.toggle,\n      setToggle = _useContext.setToggle;\n\n  return [{\n    ref: setToggle,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\nfunction DropdownToggle(_ref) {\n  var children = _ref.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      _useDropdownToggle$ = _useDropdownToggle[1],\n      show = _useDropdownToggle$.show,\n      toggle = _useDropdownToggle$.toggle;\n\n  return children({\n    show: show,\n    toggle: toggle,\n    props: props\n  });\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;"],"mappings":"AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C;AACA;AACA;AACA;;AAEA,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAClC,IAAIC,WAAW,GAAGH,UAAU,CAACC,eAAe,CAAC;IACzCG,IAAI,GAAGD,WAAW,CAACC,IAAI;IACvBC,MAAM,GAAGF,WAAW,CAACE,MAAM;IAC3BC,SAAS,GAAGH,WAAW,CAACG,SAAS;EAErC,OAAO,CAAC;IACNC,GAAG,EAAED,SAAS;IACd,eAAe,EAAE,IAAI;IACrB,eAAe,EAAE,CAAC,CAACF;EACrB,CAAC,EAAE;IACDA,IAAI,EAAEA,IAAI;IACVC,MAAM,EAAEA;EACV,CAAC,CAAC;AACJ;AACA,IAAIG,SAAS,GAAG;EACd;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEC,QAAQ,EAAEV,SAAS,CAACW,IAAI,CAACC;AAC3B,CAAC;AAED,SAASC,cAAcA,CAACC,IAAI,EAAE;EAC5B,IAAIJ,QAAQ,GAAGI,IAAI,CAACJ,QAAQ;EAE5B,IAAIK,kBAAkB,GAAGZ,iBAAiB,CAAC,CAAC;IACxCa,KAAK,GAAGD,kBAAkB,CAAC,CAAC,CAAC;IAC7BE,mBAAmB,GAAGF,kBAAkB,CAAC,CAAC,CAAC;IAC3CV,IAAI,GAAGY,mBAAmB,CAACZ,IAAI;IAC/BC,MAAM,GAAGW,mBAAmB,CAACX,MAAM;EAEvC,OAAOI,QAAQ,CAAC;IACdL,IAAI,EAAEA,IAAI;IACVC,MAAM,EAAEA,MAAM;IACdU,KAAK,EAAEA;EACT,CAAC,CAAC;AACJ;AAEAH,cAAc,CAACK,WAAW,GAAG,6BAA6B;AAC1DL,cAAc,CAACJ,SAAS,GAAGA,SAAS;AACpC;;AAEA,eAAeI,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}