{"ast":null,"code":"var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nfunction isSimplePositionValue(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\nfunction isComplexSpanValue(value) {\n  return typeof value === 'string' && value.includes('/');\n}\nvar alignmentValues = ['center', 'end', 'start', 'stretch'];\nvar displayValues = {\n  'inline-grid': ['-ms-inline-grid', 'inline-grid'],\n  grid: ['-ms-grid', 'grid']\n};\nvar propertyConverters = {\n  alignSelf: function alignSelf(value, style) {\n    if (alignmentValues.indexOf(value) > -1) {\n      style.msGridRowAlign = value;\n    }\n  },\n  gridColumn: function gridColumn(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridColumn = value;\n    } else if (isComplexSpanValue(value)) {\n      var _value$split = value.split('/'),\n        _value$split2 = _slicedToArray(_value$split, 2),\n        start = _value$split2[0],\n        end = _value$split2[1];\n      propertyConverters.gridColumnStart(+start, style);\n      var _end$split = end.split(/ ?span /),\n        _end$split2 = _slicedToArray(_end$split, 2),\n        maybeSpan = _end$split2[0],\n        maybeNumber = _end$split2[1];\n      if (maybeSpan === '') {\n        propertyConverters.gridColumnEnd(+start + +maybeNumber, style);\n      } else {\n        propertyConverters.gridColumnEnd(+end, style);\n      }\n    } else {\n      propertyConverters.gridColumnStart(value, style);\n    }\n  },\n  gridColumnEnd: function gridColumnEnd(value, style) {\n    var msGridColumn = style.msGridColumn;\n    if (isSimplePositionValue(value) && isSimplePositionValue(msGridColumn)) {\n      style.msGridColumnSpan = value - msGridColumn;\n    }\n  },\n  gridColumnStart: function gridColumnStart(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridColumn = value;\n    }\n  },\n  gridRow: function gridRow(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridRow = value;\n    } else if (isComplexSpanValue(value)) {\n      var _value$split3 = value.split('/'),\n        _value$split4 = _slicedToArray(_value$split3, 2),\n        start = _value$split4[0],\n        end = _value$split4[1];\n      propertyConverters.gridRowStart(+start, style);\n      var _end$split3 = end.split(/ ?span /),\n        _end$split4 = _slicedToArray(_end$split3, 2),\n        maybeSpan = _end$split4[0],\n        maybeNumber = _end$split4[1];\n      if (maybeSpan === '') {\n        propertyConverters.gridRowEnd(+start + +maybeNumber, style);\n      } else {\n        propertyConverters.gridRowEnd(+end, style);\n      }\n    } else {\n      propertyConverters.gridRowStart(value, style);\n    }\n  },\n  gridRowEnd: function gridRowEnd(value, style) {\n    var msGridRow = style.msGridRow;\n    if (isSimplePositionValue(value) && isSimplePositionValue(msGridRow)) {\n      style.msGridRowSpan = value - msGridRow;\n    }\n  },\n  gridRowStart: function gridRowStart(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridRow = value;\n    }\n  },\n  gridTemplateColumns: function gridTemplateColumns(value, style) {\n    style.msGridColumns = value;\n  },\n  gridTemplateRows: function gridTemplateRows(value, style) {\n    style.msGridRows = value;\n  },\n  justifySelf: function justifySelf(value, style) {\n    if (alignmentValues.indexOf(value) > -1) {\n      style.msGridColumnAlign = value;\n    }\n  }\n};\nexport default function grid(property, value, style) {\n  if (property === 'display' && value in displayValues) {\n    return displayValues[value];\n  }\n  if (property in propertyConverters) {\n    var propertyConverter = propertyConverters[property];\n    propertyConverter(value, style);\n  }\n}","map":{"version":3,"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","isSimplePositionValue","isNaN","isComplexSpanValue","includes","alignmentValues","displayValues","grid","propertyConverters","alignSelf","style","indexOf","msGridRowAlign","gridColumn","msGridColumn","_value$split","split","_value$split2","start","end","gridColumnStart","_end$split","_end$split2","maybeSpan","maybeNumber","gridColumnEnd","msGridColumnSpan","gridRow","msGridRow","_value$split3","_value$split4","gridRowStart","_end$split3","_end$split4","gridRowEnd","msGridRowSpan","gridTemplateColumns","msGridColumns","gridTemplateRows","msGridRows","justifySelf","msGridColumnAlign","property","propertyConverter"],"sources":["C:/Users/LENOVO/masterPortfolio/node_modules/inline-style-prefixer/es/plugins/grid.js"],"sourcesContent":["var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction isSimplePositionValue(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n\nfunction isComplexSpanValue(value) {\n  return typeof value === 'string' && value.includes('/');\n}\n\nvar alignmentValues = ['center', 'end', 'start', 'stretch'];\n\nvar displayValues = {\n  'inline-grid': ['-ms-inline-grid', 'inline-grid'],\n  grid: ['-ms-grid', 'grid']\n};\n\nvar propertyConverters = {\n  alignSelf: function alignSelf(value, style) {\n    if (alignmentValues.indexOf(value) > -1) {\n      style.msGridRowAlign = value;\n    }\n  },\n\n  gridColumn: function gridColumn(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridColumn = value;\n    } else if (isComplexSpanValue(value)) {\n      var _value$split = value.split('/'),\n          _value$split2 = _slicedToArray(_value$split, 2),\n          start = _value$split2[0],\n          end = _value$split2[1];\n\n      propertyConverters.gridColumnStart(+start, style);\n\n      var _end$split = end.split(/ ?span /),\n          _end$split2 = _slicedToArray(_end$split, 2),\n          maybeSpan = _end$split2[0],\n          maybeNumber = _end$split2[1];\n\n      if (maybeSpan === '') {\n        propertyConverters.gridColumnEnd(+start + +maybeNumber, style);\n      } else {\n        propertyConverters.gridColumnEnd(+end, style);\n      }\n    } else {\n      propertyConverters.gridColumnStart(value, style);\n    }\n  },\n\n  gridColumnEnd: function gridColumnEnd(value, style) {\n    var msGridColumn = style.msGridColumn;\n\n    if (isSimplePositionValue(value) && isSimplePositionValue(msGridColumn)) {\n      style.msGridColumnSpan = value - msGridColumn;\n    }\n  },\n\n  gridColumnStart: function gridColumnStart(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridColumn = value;\n    }\n  },\n\n  gridRow: function gridRow(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridRow = value;\n    } else if (isComplexSpanValue(value)) {\n      var _value$split3 = value.split('/'),\n          _value$split4 = _slicedToArray(_value$split3, 2),\n          start = _value$split4[0],\n          end = _value$split4[1];\n\n      propertyConverters.gridRowStart(+start, style);\n\n      var _end$split3 = end.split(/ ?span /),\n          _end$split4 = _slicedToArray(_end$split3, 2),\n          maybeSpan = _end$split4[0],\n          maybeNumber = _end$split4[1];\n\n      if (maybeSpan === '') {\n        propertyConverters.gridRowEnd(+start + +maybeNumber, style);\n      } else {\n        propertyConverters.gridRowEnd(+end, style);\n      }\n    } else {\n      propertyConverters.gridRowStart(value, style);\n    }\n  },\n\n  gridRowEnd: function gridRowEnd(value, style) {\n    var msGridRow = style.msGridRow;\n\n    if (isSimplePositionValue(value) && isSimplePositionValue(msGridRow)) {\n      style.msGridRowSpan = value - msGridRow;\n    }\n  },\n\n  gridRowStart: function gridRowStart(value, style) {\n    if (isSimplePositionValue(value)) {\n      style.msGridRow = value;\n    }\n  },\n\n  gridTemplateColumns: function gridTemplateColumns(value, style) {\n    style.msGridColumns = value;\n  },\n\n  gridTemplateRows: function gridTemplateRows(value, style) {\n    style.msGridRows = value;\n  },\n\n  justifySelf: function justifySelf(value, style) {\n    if (alignmentValues.indexOf(value) > -1) {\n      style.msGridColumnAlign = value;\n    }\n  }\n};\n\nexport default function grid(property, value, style) {\n  if (property === 'display' && value in displayValues) {\n    return displayValues[value];\n  }\n\n  if (property in propertyConverters) {\n    var propertyConverter = propertyConverters[property];\n    propertyConverter(value, style);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}