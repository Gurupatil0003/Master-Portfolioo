{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar defaultProps = {\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    className = _ref.className,\n    alignRight = _ref.alignRight,\n    rootCloseEvent = _ref.rootCloseEvent,\n    flip = _ref.flip,\n    popperConfig = _ref.popperConfig,\n    showProps = _ref.show,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'div' : _ref$as,\n    props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"popperConfig\", \"show\", \"as\"]);\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  var _useDropdownMenu = useDropdownMenu({\n      flip: flip,\n      popperConfig: popperConfig,\n      rootCloseEvent: rootCloseEvent,\n      show: showProps,\n      alignEnd: alignRight,\n      usePopper: !isNavbar\n    }),\n    hasShown = _useDropdownMenu.hasShown,\n    placement = _useDropdownMenu.placement,\n    show = _useDropdownMenu.show,\n    alignEnd = _useDropdownMenu.alignEnd,\n    close = _useDropdownMenu.close,\n    menuProps = _useDropdownMenu.props;\n  menuProps.ref = useMergedRefs(menuProps.ref, useWrappedRefWithWarning(ref, 'DropdownMenu'));\n  if (!hasShown) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n    menuProps.close = close;\n    menuProps.alignRight = alignEnd;\n  }\n  var style = props.style;\n  if (placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _extends({}, style, {}, menuProps.style);\n    props['x-placement'] = placement;\n  }\n  return React.createElement(Component, _extends({}, props, menuProps, {\n    style: style,\n    className: classNames(className, prefix, show && 'show', alignEnd && prefix + \"-right\")\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","classNames","React","useContext","useDropdownMenu","useMergedRefs","NavbarContext","useBootstrapPrefix","useWrappedRefWithWarning","defaultProps","alignRight","flip","DropdownMenu","forwardRef","_ref","ref","bsPrefix","className","rootCloseEvent","popperConfig","showProps","show","_ref$as","as","Component","props","isNavbar","prefix","_useDropdownMenu","alignEnd","usePopper","hasShown","placement","close","menuProps","style","createElement","displayName"],"sources":["C:/Users/LENOVO/masterPortfolio/node_modules/react-bootstrap/esm/DropdownMenu.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport { useDropdownMenu } from 'react-overlays/DropdownMenu';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nvar defaultProps = {\n  alignRight: false,\n  flip: true\n};\nvar DropdownMenu = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      popperConfig = _ref.popperConfig,\n      showProps = _ref.show,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"popperConfig\", \"show\", \"as\"]);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n\n  var _useDropdownMenu = useDropdownMenu({\n    flip: flip,\n    popperConfig: popperConfig,\n    rootCloseEvent: rootCloseEvent,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar\n  }),\n      hasShown = _useDropdownMenu.hasShown,\n      placement = _useDropdownMenu.placement,\n      show = _useDropdownMenu.show,\n      alignEnd = _useDropdownMenu.alignEnd,\n      close = _useDropdownMenu.close,\n      menuProps = _useDropdownMenu.props;\n\n  menuProps.ref = useMergedRefs(menuProps.ref, useWrappedRefWithWarning(ref, 'DropdownMenu'));\n  if (!hasShown) return null; // For custom components provide additional, non-DOM, props;\n\n  if (typeof Component !== 'string') {\n    menuProps.show = show;\n    menuProps.close = close;\n    menuProps.alignRight = alignEnd;\n  }\n\n  var style = props.style;\n\n  if (placement) {\n    // we don't need the default popper style,\n    // menus are display: none when not shown.\n    style = _extends({}, style, {}, menuProps.style);\n    props['x-placement'] = placement;\n  }\n\n  return React.createElement(Component, _extends({}, props, menuProps, {\n    style: style,\n    className: classNames(className, prefix, show && 'show', alignEnd && prefix + \"-right\")\n  }));\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}